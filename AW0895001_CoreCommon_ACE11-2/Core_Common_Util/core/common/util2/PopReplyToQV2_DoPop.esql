BROKER SCHEMA core.common.util2
PATH core.common.util;
DECLARE POP_WITH_CORREL EXTERNAL BOOLEAN FALSE;

CREATE COMPUTE MODULE PopReplyToQV2_DoPop
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyAndPop();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyAndPop() BEGIN
		SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		DECLARE header REFERENCE TO OutputRoot.XMLNSC.nsIL:esbXML.Header;
		IF LASTMOVE(header) THEN
			DECLARE queue CHARACTER;
			DECLARE queueMgr CHARACTER;
			DECLARE correlId BLOB;			

			IF POP_WITH_CORREL THEN
				CALL PopRTQWithCorrel ( header , queue , queueMgr , correlId );
				SET OutputRoot.MQMD.CorrelId = correlId;
				SET OutputRoot.MQMD.Report = MQRO_PASS_CORREL_ID;
			ELSE
				CALL PopRTQ (header, queue, queueMgr);
			END IF;
			SET OutputRoot.MQMD.ReplyToQ = COALESCE(queue, InputRoot.MQMD.ReplyToQ);
			SET OutputRoot.MQMD.ReplyToQMgr = COALESCE(queueMgr,InputRoot.MQMD.ReplyToQMgr);
		END IF;
	END;
END MODULE;